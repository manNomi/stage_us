설계과정의 목표 
-> 개발 과정에서는 코드로직만 고민하겠다 

개발 작업중 발생할 수 있는 문제 최소화 

*
기업은 문서를 더 중요하게 생각함 
-> 지속적인 성장을 위해서 
-> 기록이 중요 

개발 기업 업무 특징 
-> 협업이 기본 베이스 -> 매우긴 프로젝트 -> 잦은 팀원의 변경 

구두로 하면 -> 전달이 잘 안됨 
생각의 차이가 있을 수 있음 
요구사항이 늘어나거나 바뀌는 경우 

위와 같은 이유로 문서를 상당히 중요시 생각 

개발은 설계를 완성하고 개발을 시작해야한다 

문서를 작성하고 매일 읽어보자 
-> 매일 새롭게 느껴질것 


*소프트웨어 기획 

개발 작업에서 설계 + 문서 = 기획 

기획 : 어떤 개발자가 오던 기획서가 있다면 같은 기능 , 같은 디자인의 소프트웨어를 만들 수 있어야함 
	-> 달라질 수 있는 것은 성능이다 = 개발자의 실력 

기획에 포함되는 내용
-> 프로젝트의 목적은 무엇잇가 : 
*목적 중요 
-> 예상 사용자 : 
# 디자인과 UX의 큰 연관 
-> 플랫폼 : 
	: 컴퓨터 , 폰  / 공장에 들어간다 -> 컴 
-> 어떤 소프트웨어로 구성 되는가 : 
-> 기능 : 
기능의 목록 / 그 기능의 예외처리 / 권한 / 동작에 대한 case 
	-> 예외처리 내용 신경쓰기 
연결되어 동작하는것 신경 -> 연쇄되어 있는 종속된 기능 고려하기 
기숙 스택 -> 바닐라웹 / 외부 서비스 -> aws 
디자인 -> 가장 마지막이다 

*외주 

1. 고객과의 미팅 /회사내 다른부서 등 과 미팅
-> 기획의 여섯가지 요소를 같이 설계하는 때이다
생각 나는 아이디어를 눈치를 안보고 던지는게 중요하다 
기능 들의 종류와 동작방식 정도만 이야기 나눈다 

2. 소프트웨어 기획 
-> 요구사항 명세서 
-> 화면 설계서 작성 

3. 개발 준비 
-> 업무 분석 및 기능 명세서 작성 
-> 코딩 컨벤션 확정 (변수 이름은 카멜기준하자 / 파일은 이런 기준으로 분할하자)

4. 개발 
-> 배정받은 부분 개발 
-> 자체 테스트 지속 진행 

*수정사항은 위에서 부터 작업할것 
-> 개발이 아닌 문서 위주의 작업이 되어야한다 중요 ! 


** 요구사항명세서 
- 작성요령 

-> 정의 : 디자인을 제외한 소프트웨어의 모든 내용을 담고있는 문서 

-> 컬럼을 나눈다 앞에서부터 부채꼴로 펼쳐지게 함

1. 페이지 
-> 2. 요소 (태그) 입력 영역 , 버튼 , 계정 목록 영역  
-> 3. 기능 상세 : 
-> 4. 제약조건 : 정규표현식 

- 모든내용을 예상하면서 적자 
- 동작의 흐름과 예외처리 

*주의사항 

1.읽는 사람이 헷갈리지 않기 위해 통일된 용어 쓰자 (조사 까지 신경쓰자)
회원가입 페이지 / 계정가입 페이지 
2. 개조식으로 작성해야함 
-> 나열해라 / 말로 풀어쓰지말아라 
3. 얘는 단순히 미팅 때 나온 얘기를 옮겨적는 것이 아닌 , 설계하는 것이다. 
-> 작성하면서 실제 이 프로그램을 사용한다고 상상하는 것 

-> 고객 , 다자이너 , 본인 모두 요구사항명세서 사용하기에 중요함

** 화면 설계서 

- 정의 : 소프트웨어의 실제 모습을 그대로 그려노 놓은 문서 
- 레이아웃 색감 등등 다들어감 
-> 피그마 같은 소프트웨어 사용 

* 주의사항 
-> 발생하는 모든 페이지를 그릴것 !!
예를 들어 예외처리 해서 나오는 것 
예외처리 된것들이나 등ㄷ으 그런 모든 상황 들 다 넣기
로그인 페이지 로그인 이면 한5개나올듯

-> 요구사항 명세서에 있는 설명은 다시 적지 않음 
ㄴ 이 두개는 같이 본다는 것을 전재로 함 

그림이 있어야 이해가는건 요구사항 명세서에 쓰자 
-> 요구사항 명세서 : 디자인적인 부분 적지 않는다 
버튼 : 상단에 위치 같은 것 

디자인에 많은 시간 쏟지 말자 
-> 말이 되는 프로그램이 되게 만들자 




 
